{"version":3,"file":"ngx-chess-board.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-chess-board/lib/models/pieces/color.ts","ng://ngx-chess-board/lib/models/pieces/piece.ts","ng://ngx-chess-board/lib/models/pieces/point.ts","ng://ngx-chess-board/lib/models/pieces/rook.ts","ng://ngx-chess-board/lib/models/pieces/king.ts","ng://ngx-chess-board/lib/models/pieces/bishop.ts","ng://ngx-chess-board/lib/models/pieces/knight.ts","ng://ngx-chess-board/lib/models/pieces/pawn.ts","ng://ngx-chess-board/lib/models/pieces/queen.ts","ng://ngx-chess-board/lib/utils/unicode-constants.ts","ng://ngx-chess-board/lib/board-state-provider/board-loader.ts","ng://ngx-chess-board/lib/board-state-provider/board-state.ts","ng://ngx-chess-board/lib/board-state-provider/board-state-provider.ts","ng://ngx-chess-board/lib/coords/coords-provider.ts","ng://ngx-chess-board/lib/drawing-tools/arrow.ts","ng://ngx-chess-board/lib/drawing-tools/circle.ts","ng://ngx-chess-board/lib/drawing-tools/draw-point.ts","ng://ngx-chess-board/lib/drawing-tools/draw-provider.ts","ng://ngx-chess-board/lib/history-move-provider/history-move.ts","ng://ngx-chess-board/lib/history-move-provider/history-move-provider.ts","ng://ngx-chess-board/lib/models/board.ts","ng://ngx-chess-board/lib/models/move-translation.ts","ng://ngx-chess-board/lib/utils/move-utils.ts","ng://ngx-chess-board/lib/piece-decorator/piece-abstract-decorator.ts","ng://ngx-chess-board/lib/piece-decorator/available-move-decorator.ts","ng://ngx-chess-board/lib/piece-promotion-modal/piece-promotion-modal.component.ts","ng://ngx-chess-board/lib/service/ngx-chess-board.service.ts","ng://ngx-chess-board/lib/utils/constants.ts","ng://ngx-chess-board/lib/utils/inputs/piece-icon-input-manager.ts","ng://ngx-chess-board/lib/ngx-chess-board.component.ts","ng://ngx-chess-board/lib/ngx-chess-board.module.ts","ng://ngx-chess-board/lib/utils/inputs/piece-icon-input.ts","ng://ngx-chess-board/lib/ngx-chess-board-view.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export enum Color {\r\n    WHITE,\r\n    BLACK,\r\n}\r\n","import { AbstractPiece } from '../../piece-decorator/abstract-piece';\r\nimport { PieceConstant } from '../../utils/unicode-constants';\r\nimport { Board } from '../board';\r\nimport { Color } from './color';\r\nimport { Point } from './point';\r\n\r\nexport abstract class Piece implements AbstractPiece {\r\n    point: Point;\r\n    color: Color;\r\n    constant: PieceConstant;\r\n    checkPoints: Point[] = [];\r\n    relValue: number;\r\n    board: Board;\r\n\r\n    constructor(\r\n        point: Point,\r\n        color: Color,\r\n        constant: PieceConstant,\r\n        relValue: number,\r\n        board: Board\r\n    ) {\r\n        this.color = color;\r\n        this.constant = constant;\r\n        this.point = point;\r\n        this.relValue = relValue;\r\n        this.board = board;\r\n    }\r\n\r\n    abstract getPossibleMoves(): Point[];\r\n\r\n    abstract getPossibleCaptures(): Point[];\r\n\r\n    abstract getCoveredFields(): Point[]; // zwraca liste punktow ktore sa puste lub istnieje na nich pionek tego samego koloru\r\n}\r\n","export class Point {\r\n    row: number;\r\n    col: number;\r\n\r\n    constructor(row: number, col: number) {\r\n        this.row = row;\r\n        this.col = col;\r\n    }\r\n\r\n    isEqual(that: Point) {\r\n        return that && this.row === that.row && this.col === that.col;\r\n    }\r\n\r\n    hasCoordsEqual(row: number, col: number) {\r\n        return row && col && this.row === row && this.col === col;\r\n    }\r\n}\r\n","import { PieceConstant } from '../../utils/unicode-constants';\r\nimport { Board } from '../board';\r\nimport { Color } from './color';\r\nimport { King } from './king';\r\nimport { Piece } from './piece';\r\nimport { Point } from './point';\r\n\r\nexport class Rook extends Piece {\r\n    isMovedAlready = false;\r\n\r\n    constructor(\r\n        point: Point,\r\n        color: Color,\r\n        constant: PieceConstant,\r\n        board: Board\r\n    ) {\r\n        super(point, color, constant, 5, board);\r\n    }\r\n\r\n    getPossibleMoves(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row + 1; i < 8; ++i) {\r\n            // dol\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1; i >= 0; --i) {\r\n            // gora\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let j = col - 1; j >= 0; --j) {\r\n            // lewo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let j = col + 1; j < 8; ++j) {\r\n            // prawo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getPossibleCaptures(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row + 1; i < 8; ++i) {\r\n            // dol\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    col,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, col));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, col)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1; i >= 0; --i) {\r\n            // gora\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    col,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, col));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, col)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col - 1; j >= 0; --j) {\r\n            // lewo\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    row,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(row, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col + 1; j < 8; ++j) {\r\n            // prawo\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    row,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(row, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getCoveredFields(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row + 1; i < 8; ++i) {\r\n            // dol\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                if (!(this.board.getPieceByField instanceof King)) {\r\n                    possiblePoints.push(new Point(i, col));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1; i >= 0; --i) {\r\n            // gora\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                if (!(this.board.getPieceByField instanceof King)) {\r\n                    possiblePoints.push(new Point(i, col));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col - 1; j >= 0; --j) {\r\n            // lewo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField instanceof King)) {\r\n                    possiblePoints.push(new Point(row, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col + 1; j < 8; ++j) {\r\n            // prawo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField instanceof King)) {\r\n                    possiblePoints.push(new Point(row, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n}\r\n","import { PieceConstant } from '../../utils/unicode-constants';\r\nimport { Board } from '../board';\r\nimport { Color } from './color';\r\nimport { Piece } from './piece';\r\nimport { Point } from './point';\r\nimport { Rook } from './rook';\r\n\r\nexport class King extends Piece {\r\n    castledAlready = false;\r\n    shortCastled = false;\r\n    longCastled = false;\r\n    isMovedAlready;\r\n    isCastling = false;\r\n\r\n    constructor(\r\n        point: Point,\r\n        color: Color,\r\n        constant: PieceConstant,\r\n        board: Board\r\n    ) {\r\n        super(point, color, constant, 0, board);\r\n    }\r\n\r\n    getPossibleMoves(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n        // lewo\r\n        if (\r\n            this.board.isFieldEmpty(row, col - 1) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row, col - 1));\r\n        }\r\n\r\n        // prawo\r\n        if (\r\n            this.board.isFieldEmpty(row, col + 1) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row, col + 1));\r\n        }\r\n\r\n        // dol\r\n        if (\r\n            this.board.isFieldEmpty(row + 1, col) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row + 1,\r\n                col,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 1, col));\r\n        }\r\n\r\n        // gora\r\n        if (\r\n            this.board.isFieldEmpty(row - 1, col) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row - 1,\r\n                col,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col));\r\n        }\r\n\r\n        // lewo gora\r\n        if (\r\n            this.board.isFieldEmpty(row - 1, col - 1) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row - 1,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col - 1));\r\n        }\r\n        // prawo gora\r\n        if (\r\n            this.board.isFieldEmpty(row - 1, col + 1) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row - 1,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col + 1));\r\n        }\r\n\r\n        // lewo dol\r\n        if (\r\n            this.board.isFieldEmpty(row + 1, col - 1) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row + 1,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 1, col - 1));\r\n        }\r\n        // prawo dol\r\n        if (\r\n            this.board.isFieldEmpty(row + 1, col + 1) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row + 1,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 1, col + 1));\r\n        }\r\n\r\n        if (!this.isMovedAlready) {\r\n            let longCastlePossible = true;\r\n            for (let i = col - 1; i > 0; --i) {\r\n                if (\r\n                    !this.board.isFieldEmpty(row, i) ||\r\n                    this.board.isFieldUnderAttack(\r\n                        row,\r\n                        i,\r\n                        this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                    )\r\n                ) {\r\n                    longCastlePossible = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (longCastlePossible && this.board.getPieceByField(row, 0)) {\r\n                const leftRook = this.board.getPieceByField(row, 0);\r\n                if (leftRook instanceof Rook) {\r\n                    if (!leftRook.isMovedAlready) {\r\n                        possiblePoints.push(new Point(row, col - 2));\r\n                    }\r\n                }\r\n            }\r\n\r\n            let shortCastlePossible = true;\r\n            for (let i = col + 1; i < 7; ++i) {\r\n                if (\r\n                    !this.board.isFieldEmpty(row, i) ||\r\n                    this.board.isFieldUnderAttack(\r\n                        row,\r\n                        i,\r\n                        this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                    )\r\n                ) {\r\n                    shortCastlePossible = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (shortCastlePossible && this.board.getPieceByField(row, 7)) {\r\n                const rightRook = this.board.getPieceByField(row, 7);\r\n                if (rightRook instanceof Rook) {\r\n                    if (!rightRook.isMovedAlready) {\r\n                        possiblePoints.push(new Point(row, col + 2));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getPossibleCaptures(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        // lewo\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            ) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row, col - 1));\r\n        }\r\n\r\n        // prawo\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            ) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row, col + 1));\r\n        }\r\n\r\n        // dol\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row + 1,\r\n                col,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            ) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row + 1,\r\n                col,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 1, col));\r\n        }\r\n\r\n        // gora\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row - 1,\r\n                col,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            ) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row - 1,\r\n                col,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col));\r\n        }\r\n\r\n        // lewo gora\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row - 1,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            ) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row - 1,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col - 1));\r\n        }\r\n        // prawo gora\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row - 1,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            ) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row - 1,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col + 1));\r\n        }\r\n\r\n        // lewo dol\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row + 1,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            ) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row + 1,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 1, col - 1));\r\n        }\r\n        // prawo dol\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row + 1,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            ) &&\r\n            !this.board.isFieldUnderAttack(\r\n                row + 1,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 1, col + 1));\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getCoveredFields(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        // lewo\r\n        if (this.board.isFieldTakenByEnemy(row, col - 1, this.color)) {\r\n            possiblePoints.push(new Point(row, col - 1));\r\n        }\r\n\r\n        // prawo\r\n        if (this.board.isFieldTakenByEnemy(row, col + 1, this.color)) {\r\n            possiblePoints.push(new Point(row, col + 1));\r\n        }\r\n\r\n        // dol\r\n        if (this.board.isFieldTakenByEnemy(row + 1, col, this.color)) {\r\n            possiblePoints.push(new Point(row + 1, col));\r\n        }\r\n\r\n        // gora\r\n        if (this.board.isFieldTakenByEnemy(row - 1, col, this.color)) {\r\n            possiblePoints.push(new Point(row - 1, col));\r\n        }\r\n\r\n        // lewo gora\r\n        if (this.board.isFieldTakenByEnemy(row - 1, col - 1, this.color)) {\r\n            possiblePoints.push(new Point(row - 1, col - 1));\r\n        }\r\n        // prawo gora\r\n        if (this.board.isFieldTakenByEnemy(row - 1, col + 1, this.color)) {\r\n            possiblePoints.push(new Point(row - 1, col + 1));\r\n        }\r\n\r\n        // lewo dol\r\n        if (this.board.isFieldTakenByEnemy(row + 1, col - 1, this.color)) {\r\n            possiblePoints.push(new Point(row + 1, col - 1));\r\n        }\r\n        // prawo dol\r\n        if (this.board.isFieldTakenByEnemy(row + 1, col + 1, this.color)) {\r\n            possiblePoints.push(new Point(row + 1, col + 1));\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n}\r\n","import { PieceConstant } from '../../utils/unicode-constants';\r\nimport { Board } from '../board';\r\nimport { Color } from './color';\r\nimport { King } from './king';\r\nimport { Piece } from './piece';\r\nimport { Point } from './point';\r\n\r\nexport class Bishop extends Piece {\r\n    constructor(\r\n        point: Point,\r\n        color: Color,\r\n        constant: PieceConstant,\r\n        board: Board\r\n    ) {\r\n        super(point, color, constant, 3, board);\r\n    }\r\n\r\n    getPossibleMoves(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) {\r\n            // lewa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) {\r\n            // prawa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) {\r\n            // lewa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) {\r\n            // prawa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getPossibleCaptures() {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) {\r\n            // lewa gorna przekatna\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) {\r\n            // prawa gorna przekatna\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) {\r\n            // lewa dolna przekatna\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) {\r\n            // prawa dolna przekatna\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getCoveredFields(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) {\r\n            // lewa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) {\r\n            // prawa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) {\r\n            // lewa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) {\r\n            // prawa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n}\r\n","import { PieceConstant } from '../../utils/unicode-constants';\r\nimport { Board } from '../board';\r\nimport { Color } from './color';\r\nimport { Piece } from './piece';\r\nimport { Point } from './point';\r\n\r\nexport class Knight extends Piece {\r\n    isMovedAlready = false;\r\n\r\n    constructor(\r\n        point: Point,\r\n        color: Color,\r\n        constant: PieceConstant,\r\n        board: Board\r\n    ) {\r\n        super(point, color, constant, 3, board);\r\n    }\r\n\r\n    getPossibleMoves(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        // gora -> lewo\r\n        if (this.board.isFieldEmpty(row - 2, col - 1)) {\r\n            possiblePoints.push(new Point(row - 2, col - 1));\r\n        }\r\n\r\n        // gora -> prawo\r\n        if (this.board.isFieldEmpty(row - 2, col + 1)) {\r\n            possiblePoints.push(new Point(row - 2, col + 1));\r\n        }\r\n\r\n        // lewo -> gora\r\n        if (this.board.isFieldEmpty(row - 1, col - 2)) {\r\n            possiblePoints.push(new Point(row - 1, col - 2));\r\n        }\r\n\r\n        // prawo -> gora\r\n        if (this.board.isFieldEmpty(row - 1, col + 2)) {\r\n            possiblePoints.push(new Point(row - 1, col + 2));\r\n        }\r\n\r\n        // lewo -> dol\r\n        if (this.board.isFieldEmpty(row + 1, col - 2)) {\r\n            possiblePoints.push(new Point(row + 1, col - 2));\r\n        }\r\n\r\n        // prawo -> dol\r\n        if (this.board.isFieldEmpty(row + 1, col + 2)) {\r\n            possiblePoints.push(new Point(row + 1, col + 2));\r\n        }\r\n\r\n        // dol -> lewo\r\n        if (this.board.isFieldEmpty(row + 2, col - 1)) {\r\n            possiblePoints.push(new Point(row + 2, col - 1));\r\n        }\r\n\r\n        // dol -> prawo\r\n        if (this.board.isFieldEmpty(row + 2, col + 1)) {\r\n            possiblePoints.push(new Point(row + 2, col + 1));\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getPossibleCaptures(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        // gora -> lewo\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row - 2,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 2, col - 1));\r\n        }\r\n\r\n        // gora -> prawo\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row - 2,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 2, col + 1));\r\n        }\r\n\r\n        // lewo -> gora\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row - 1,\r\n                col - 2,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col - 2));\r\n        }\r\n\r\n        // prawo -> gora\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row - 1,\r\n                col + 2,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col + 2));\r\n        }\r\n\r\n        // lewo -> dol\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row + 1,\r\n                col - 2,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 1, col - 2));\r\n        }\r\n\r\n        // prawo -> dol\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row + 1,\r\n                col + 2,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 1, col + 2));\r\n        }\r\n\r\n        // dol -> lewo\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row + 2,\r\n                col - 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 2, col - 1));\r\n        }\r\n\r\n        // dol -> prawo\r\n        if (\r\n            this.board.isFieldTakenByEnemy(\r\n                row + 2,\r\n                col + 1,\r\n                this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n            )\r\n        ) {\r\n            possiblePoints.push(new Point(row + 2, col + 1));\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getCoveredFields(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        // gora -> lewo\r\n        possiblePoints.push(new Point(row - 2, col - 1));\r\n\r\n        // gora -> prawo\r\n        possiblePoints.push(new Point(row - 2, col + 1));\r\n\r\n        // lewo -> gora\r\n        possiblePoints.push(new Point(row - 1, col - 2));\r\n\r\n        // prawo -> gora\r\n        possiblePoints.push(new Point(row - 1, col + 2));\r\n\r\n        // lewo -> dol\r\n        possiblePoints.push(new Point(row + 1, col - 2));\r\n\r\n        // prawo -> dol\r\n        possiblePoints.push(new Point(row + 1, col + 2));\r\n\r\n        // dol -> lewo\r\n        possiblePoints.push(new Point(row + 2, col - 1));\r\n\r\n        // dol -> prawo\r\n        possiblePoints.push(new Point(row + 2, col + 1));\r\n\r\n        return possiblePoints;\r\n    }\r\n}\r\n","import { PieceConstant } from '../../utils/unicode-constants';\r\nimport { Board } from '../board';\r\nimport { Color } from './color';\r\nimport { Piece } from './piece';\r\nimport { Point } from './point';\r\n\r\nexport class Pawn extends Piece {\r\n    isMovedAlready = false;\r\n\r\n    constructor(\r\n        point: Point,\r\n        color: Color,\r\n        constant: PieceConstant,\r\n        board: Board\r\n    ) {\r\n        super(point, color, constant, 1, board);\r\n    }\r\n\r\n    getPossibleMoves(): Point[] {\r\n        const possiblePoints = [];\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n        if (\r\n            (!this.board.reverted && this.color === Color.WHITE) ||\r\n            (this.board.reverted && this.color === Color.BLACK)\r\n        ) {\r\n            if (this.board.isFieldEmpty(row - 1, col)) {\r\n                possiblePoints.push(new Point(row - 1, col));\r\n\r\n                if (\r\n                    !this.isMovedAlready &&\r\n                    this.board.isFieldEmpty(row - 2, col)\r\n                ) {\r\n                    possiblePoints.push(new Point(row - 2, col));\r\n                }\r\n            }\r\n        } else {\r\n            if (\r\n                /*!board.isFieldTakenByEnemy(row + 1, col, Color.WHITE) &&*/ this.board.isFieldEmpty(\r\n                    row + 1,\r\n                    col\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row + 1, col));\r\n\r\n                if (\r\n                    !this.isMovedAlready &&\r\n                    this.board.isFieldEmpty(row + 2, col)\r\n                ) {\r\n                    possiblePoints.push(new Point(row + 2, col));\r\n                }\r\n            }\r\n        }\r\n        return possiblePoints;\r\n    }\r\n\r\n    getPossibleCaptures(): Point[] {\r\n        const possiblePoints = [];\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        if (\r\n            (!this.board.reverted && this.color === Color.WHITE) ||\r\n            (this.board.reverted && this.color === Color.BLACK)\r\n        ) {\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    row - 1,\r\n                    col - 1,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row - 1, col - 1));\r\n            }\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    row - 1,\r\n                    col + 1,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row - 1, col + 1));\r\n            }\r\n        } else {\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    row + 1,\r\n                    col - 1,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row + 1, col - 1));\r\n            }\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    row + 1,\r\n                    col + 1,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row + 1, col + 1));\r\n            }\r\n        }\r\n\r\n        if (\r\n            this.board.enPassantPoint &&\r\n            this.board.enPassantPiece.color ===\r\n                (this.color === Color.WHITE ? Color.BLACK : Color.WHITE)\r\n        ) {\r\n            if (\r\n                row === this.board.enPassantPiece.point.row &&\r\n                Math.abs(this.board.enPassantPiece.point.col - col) === 1\r\n            ) {\r\n                possiblePoints.push(this.board.enPassantPoint);\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getCoveredFields(): Point[] {\r\n        const possiblePoints = [];\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        if (\r\n            (!this.board.reverted && this.color === Color.WHITE) ||\r\n            (this.board.reverted && this.color === Color.BLACK)\r\n        ) {\r\n            possiblePoints.push(new Point(row - 1, col - 1));\r\n\r\n            possiblePoints.push(new Point(row - 1, col + 1));\r\n        } else {\r\n            possiblePoints.push(new Point(row + 1, col - 1));\r\n\r\n            possiblePoints.push(new Point(row + 1, col + 1));\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n}\r\n","import { PieceConstant } from '../../utils/unicode-constants';\r\nimport { Board } from '../board';\r\nimport { Color } from './color';\r\nimport { King } from './king';\r\nimport { Piece } from './piece';\r\nimport { Point } from './point';\r\n\r\nexport class Queen extends Piece {\r\n    constructor(\r\n        point: Point,\r\n        color: Color,\r\n        constant: PieceConstant,\r\n        board: Board\r\n    ) {\r\n        super(point, color, constant, 9, board);\r\n    }\r\n\r\n    getPossibleMoves(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) {\r\n            // lewa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) {\r\n            // prawa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) {\r\n            // lewa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) {\r\n            // prawa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1; i < 8; ++i) {\r\n            // dol\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1; i >= 0; --i) {\r\n            // gora\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let j = col - 1; j >= 0; --j) {\r\n            // lewo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let j = col + 1; j < 8; ++j) {\r\n            // prawo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n\r\n    getPossibleCaptures(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) {\r\n            // lewa gorna przekatna\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) {\r\n            // prawa gorna przekatna\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) {\r\n            // lewa dolna przekatna\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) {\r\n            // prawa dolna przekatna\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for (let i = row + 1; i < 8; ++i) {\r\n            // dol\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    col,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, col));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, col)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1; i >= 0; --i) {\r\n            // gora\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    i,\r\n                    col,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(i, col));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(i, col)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col - 1; j >= 0; --j) {\r\n            // lewo\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    row,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(row, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col + 1; j < 8; ++j) {\r\n            // prawo\r\n            if (\r\n                this.board.isFieldTakenByEnemy(\r\n                    row,\r\n                    j,\r\n                    this.color === Color.WHITE ? Color.BLACK : Color.WHITE\r\n                )\r\n            ) {\r\n                possiblePoints.push(new Point(row, j));\r\n                break;\r\n            } else {\r\n                if (!this.board.isFieldEmpty(row, j)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return possiblePoints;\r\n    }\r\n\r\n    getCoveredFields(): Point[] {\r\n        const possiblePoints = [];\r\n\r\n        const row = this.point.row;\r\n        const col = this.point.col;\r\n\r\n        for (let i = row + 1; i < 8; ++i) {\r\n            // dol\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, col) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, col));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1; i >= 0; --i) {\r\n            // gora\r\n            if (this.board.isFieldEmpty(i, col)) {\r\n                possiblePoints.push(new Point(i, col));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, col) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, col));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col - 1; j >= 0; --j) {\r\n            // lewo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(row, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(row, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let j = col + 1; j < 8; ++j) {\r\n            // prawo\r\n            if (this.board.isFieldEmpty(row, j)) {\r\n                possiblePoints.push(new Point(row, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(row, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(row, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; --i, --j) {\r\n            // lewa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row - 1, j = col + 1; i >= 0 && j < 8; --i, ++j) {\r\n            // prawa gorna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col - 1; i < 8 && j >= 0; ++i, --j) {\r\n            // lewa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = row + 1, j = col + 1; i < 8 && j < 8; ++i, ++j) {\r\n            // prawa dolna przekatna\r\n            if (this.board.isFieldEmpty(i, j)) {\r\n                possiblePoints.push(new Point(i, j));\r\n            } else {\r\n                if (!(this.board.getPieceByField(i, j) instanceof King)) {\r\n                    possiblePoints.push(new Point(i, j));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return possiblePoints;\r\n    }\r\n}\r\n","export interface PieceConstant {\r\n    name: string;\r\n    icon: string;\r\n}\r\n\r\nexport const UnicodeConstants = {\r\n    WHITE_KING: { name: 'King', icon: '&#x2654;' },\r\n    WHITE_QUEEN: { name: 'Queen', icon: '&#x2655;' },\r\n    WHITE_KNIGHT: { name: 'Knight', icon: '&#x2658' },\r\n    WHITE_ROOK: { name: 'Rook', icon: '&#x2656' },\r\n    WHITE_PAWN: { name: 'Pawn', icon: '&#x2659' },\r\n    WHITE_BISHOP: { name: 'Bishop', icon: '&#x2657' },\r\n\r\n    BLACK_KING: { name: 'King', icon: '&#x265A' },\r\n    BLACK_QUEEN: { name: 'Queen', icon: '&#x265B' },\r\n    BLACK_KNIGHT: { name: 'Knight', icon: '&#x265E' },\r\n    BLACK_ROOK: { name: 'Rook', icon: '&#x265C' },\r\n    BLACK_PAWN: { name: 'Pawn', icon: '&#x265F' },\r\n    BLACK_BISHOP: { name: 'Bishop', icon: '&#x265D' },\r\n};\r\n","import { Board } from '../models/board';\r\nimport { Bishop } from '../models/pieces/bishop';\r\nimport { Color } from '../models/pieces/color';\r\nimport { King } from '../models/pieces/king';\r\nimport { Knight } from '../models/pieces/knight';\r\nimport { Pawn } from '../models/pieces/pawn';\r\nimport { Point } from '../models/pieces/point';\r\nimport { Queen } from '../models/pieces/queen';\r\nimport { Rook } from '../models/pieces/rook';\r\nimport { UnicodeConstants } from '../utils/unicode-constants';\r\n\r\nexport class BoardLoader {\r\n    private board: Board;\r\n\r\n    constructor(board: Board) {\r\n        this.board = board;\r\n    }\r\n\r\n    addPieces() {\r\n        this.board.pieces = [];\r\n        // piony czarne\r\n        for (let i = 0; i < 8; ++i) {\r\n            this.board.pieces.push(new Pawn(new Point(1, i), Color.BLACK, UnicodeConstants.BLACK_PAWN, this.board));\r\n        }\r\n        this.board.pieces.push(new Rook(new Point(0, 0), Color.BLACK, UnicodeConstants.BLACK_ROOK, this.board));\r\n        this.board.pieces.push(new Knight(new Point(0, 1), Color.BLACK, UnicodeConstants.BLACK_KNIGHT, this.board));\r\n        this.board.pieces.push(new Bishop(new Point(0, 2), Color.BLACK, UnicodeConstants.BLACK_BISHOP, this.board));\r\n        this.board.pieces.push(new Queen(new Point(0, 3), Color.BLACK, UnicodeConstants.BLACK_QUEEN, this.board));\r\n        this.board.pieces.push(new King(new Point(0, 4), Color.BLACK, UnicodeConstants.BLACK_KING, this.board));\r\n        this.board.pieces.push(new Bishop(new Point(0, 5), Color.BLACK, UnicodeConstants.BLACK_BISHOP, this.board));\r\n        this.board.pieces.push(new Knight(new Point(0, 6), Color.BLACK, UnicodeConstants.BLACK_KNIGHT, this.board));\r\n        this.board.pieces.push(new Rook(new Point(0, 7), Color.BLACK, UnicodeConstants.BLACK_ROOK, this.board));\r\n\r\n        // piony biale\r\n        for (let i = 0; i < 8; ++i) {\r\n            this.board.pieces.push(new Pawn(new Point(6, i), Color.WHITE, UnicodeConstants.WHITE_PAWN, this.board));\r\n        }\r\n        this.board.pieces.push(new Rook(new Point(7, 0), Color.WHITE, UnicodeConstants.WHITE_ROOK, this.board));\r\n        this.board.pieces.push(new Knight(new Point(7, 1), Color.WHITE, UnicodeConstants.WHITE_KNIGHT, this.board));\r\n        this.board.pieces.push(new Bishop(new Point(7, 2), Color.WHITE, UnicodeConstants.WHITE_BISHOP, this.board));\r\n        this.board.pieces.push(new Queen(new Point(7, 3), Color.WHITE, UnicodeConstants.WHITE_QUEEN, this.board));\r\n        this.board.pieces.push(new King(new Point(7, 4), Color.WHITE, UnicodeConstants.WHITE_KING, this.board));\r\n        this.board.pieces.push(new Bishop(new Point(7, 5), Color.WHITE, UnicodeConstants.WHITE_BISHOP, this.board));\r\n        this.board.pieces.push(new Knight(new Point(7, 6), Color.WHITE, UnicodeConstants.WHITE_KNIGHT, this.board));\r\n        this.board.pieces.push(new Rook(new Point(7, 7), Color.WHITE, UnicodeConstants.WHITE_ROOK, this.board));\r\n\r\n        this.board.calculateFEN();\r\n    }\r\n\r\n    loadFEN(fen: string) {\r\n        if (fen) {\r\n            this.board.reverted = false;\r\n            this.board.pieces = [];\r\n            const split = fen.split('/');\r\n            for (let i = 0; i < 8; ++i) {\r\n                let pointer = 0;\r\n                for (let j = 0; j < 8; ++j) {\r\n                    const chunk = split[i].charAt(j);\r\n                    if (chunk.match(/[0-9]/)) {\r\n                        pointer += Number(chunk);\r\n                    } else {\r\n                        switch (chunk) {\r\n                            case 'r':\r\n                                this.board.pieces.push(\r\n                                    new Rook(\r\n                                        new Point(i, pointer),\r\n                                        Color.BLACK,\r\n                                        UnicodeConstants.BLACK_ROOK,\r\n                                        this.board\r\n                                    )\r\n                                );\r\n                                break;\r\n                            case 'n':\r\n                                this.board.pieces.push(\r\n                                    new Knight(\r\n                                        new Point(i, pointer),\r\n                                        Color.BLACK,\r\n                                        UnicodeConstants.BLACK_KNIGHT,\r\n                                        this.board\r\n                                    )\r\n                                );\r\n\r\n                                break;\r\n                            case 'b':\r\n                                this.board.pieces.push(\r\n                                    new Bishop(\r\n                                        new Point(i, pointer),\r\n                                        Color.BLACK,\r\n                                        UnicodeConstants.BLACK_BISHOP,\r\n                                        this.board\r\n                                    )\r\n                                );\r\n                                break;\r\n                            case 'q':\r\n                                this.board.pieces.push(\r\n                                    new Queen(\r\n                                        new Point(i, pointer),\r\n                                        Color.BLACK,\r\n                                        UnicodeConstants.BLACK_QUEEN,\r\n                                        this.board\r\n                                    )\r\n                                );\r\n                                break;\r\n                            case 'k':\r\n                                this.board.pieces.push(\r\n                                    new King(\r\n                                        new Point(i, pointer),\r\n                                        Color.BLACK,\r\n                                        UnicodeConstants.BLACK_KING,\r\n                                        this.board\r\n                                    )\r\n                                );\r\n                                break;\r\n                            case 'p': {\r\n                                const pawn = new Pawn(\r\n                                    new Point(i, pointer),\r\n                                    Color.BLACK,\r\n                                    UnicodeConstants.BLACK_PAWN,\r\n                                    this.board\r\n                                );\r\n                                if (\r\n                                    (pawn.color === Color.BLACK && pawn.point.row !== 1) ||\r\n                                    (pawn.color === Color.WHITE && pawn.point.row !== 6)\r\n                                ) {\r\n                                    pawn.isMovedAlready = true;\r\n                                }\r\n                                this.board.pieces.push(pawn);\r\n                                break;\r\n                            }\r\n                            case 'R':\r\n                                this.board.pieces.push(\r\n                                    new Rook(\r\n                                        new Point(i, pointer),\r\n                                        Color.WHITE,\r\n                                        UnicodeConstants.WHITE_ROOK,\r\n                                        this.board\r\n                                    )\r\n                                );\r\n\r\n                                break;\r\n                            case 'N':\r\n                                this.board.pieces.push(\r\n                                    new Knight(\r\n                                        new Point(i, pointer),\r\n                                        Color.WHITE,\r\n                                        UnicodeConstants.WHITE_KNIGHT,\r\n                                        this.board\r\n                                    )\r\n                                );\r\n                                break;\r\n\r\n                            case 'B':\r\n                                this.board.pieces.push(\r\n                                    new Bishop(\r\n                                        new Point(i, pointer),\r\n                                        Color.WHITE,\r\n                                        UnicodeConstants.WHITE_BISHOP,\r\n                                        this.board\r\n                                    )\r\n                                );\r\n                                break;\r\n\r\n                            case 'Q':\r\n                                this.board.pieces.push(\r\n                                    new Queen(\r\n                                        new Point(i, pointer),\r\n                                        Color.WHITE,\r\n                                        UnicodeConstants.WHITE_QUEEN,\r\n                                        this.board\r\n                                    )\r\n                                );\r\n                                break;\r\n\r\n                            case 'K':\r\n                                this.board.pieces.push(\r\n                                    new King(\r\n                                        new Point(i, pointer),\r\n                                        Color.WHITE,\r\n                                        UnicodeConstants.WHITE_KING,\r\n                                        this.board\r\n                                    )\r\n                                );\r\n                                break;\r\n\r\n                            case 'P': {\r\n                                const pawn = new Pawn(\r\n                                    new Point(i, pointer),\r\n                                    Color.WHITE,\r\n                                    UnicodeConstants.WHITE_PAWN,\r\n                                    this.board\r\n                                );\r\n                                if (\r\n                                    (pawn.color === Color.BLACK && pawn.point.row !== 1) ||\r\n                                    (pawn.color === Color.WHITE && pawn.point.row !== 6)\r\n                                ) {\r\n                                    pawn.isMovedAlready = true;\r\n                                }\r\n                                this.board.pieces.push(pawn);\r\n                                break;\r\n                            }\r\n                        }\r\n                        ++pointer;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.setCurrentPlayer(fen);\r\n            this.setCastles(fen);\r\n            this.setEnPassant(fen);\r\n            this.setFullMoveCount(fen);\r\n        } else {\r\n            throw Error('Incorrect FEN provided');\r\n        }\r\n    }\r\n\r\n    setBoard(board: Board) {\r\n        this.board = board;\r\n    }\r\n\r\n    private setCurrentPlayer(fen: string) {\r\n        if (fen) {\r\n            const split = fen.split(' ');\r\n            this.board.currentWhitePlayer = split[1] === 'w';\r\n        }\r\n    }\r\n\r\n    private setCastles(fen: string) {\r\n        if (fen) {\r\n            const split = fen.split(' ');\r\n            const castleChunk = split[2];\r\n\r\n            if (!castleChunk.includes('K')) {\r\n                this.setRookAlreadyMoved(Color.WHITE, 7);\r\n            }\r\n\r\n            if (!castleChunk.includes('Q')) {\r\n                this.setRookAlreadyMoved(Color.WHITE, 0);\r\n            }\r\n\r\n            if (!castleChunk.includes('k')) {\r\n                this.setRookAlreadyMoved(Color.BLACK, 7);\r\n            }\r\n\r\n            if (!castleChunk.includes('q')) {\r\n                this.setRookAlreadyMoved(Color.BLACK, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setFullMoveCount(fen: string) {}\r\n\r\n    private setEnPassant(fen: string) {\r\n        if (fen) {\r\n            const split = fen.split(' ');\r\n            const enPassantPoint = split[3];\r\n\r\n            if (enPassantPoint === '-') {\r\n                return;\r\n            }\r\n\r\n            // if()\r\n        }\r\n    }\r\n\r\n    private setRookAlreadyMoved(color: Color, col: number) {\r\n        const rook = this.board.pieces.find(\r\n            (piece) => piece.color === color && piece instanceof Rook && piece.point.col === col\r\n        ) as Rook;\r\n        rook.isMovedAlready = true;\r\n    }\r\n}\r\n","import { Board } from '../models/board';\r\n\r\nexport class BoardState {\r\n\r\n    board: Board;\r\n\r\n    constructor(board: Board) {\r\n        this.board = board;\r\n    }\r\n\r\n}\r\n","import { BehaviorSubject } from 'rxjs';\r\nimport { BoardState } from './board-state';\r\n\r\nexport class BoardStateProvider {\r\n    statesSubject$ = new BehaviorSubject<BoardState[]>([]);\r\n\r\n    get states(): BoardState[] {\r\n        return this.statesSubject$.value;\r\n    }\r\n\r\n    set states(states: BoardState[]) {\r\n        this.statesSubject$.next(states);\r\n    }\r\n\r\n    addMove(state: BoardState) {\r\n        this.states = [...this.states, state];\r\n    }\r\n\r\n    getStates(): BoardState[] {\r\n        return this.states;\r\n    }\r\n\r\n    pop(): BoardState {\r\n        const lastState = this.getLastState();\r\n        this.states = this.states.filter((state) => state !== lastState);\r\n        return lastState;\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.states.length === 0;\r\n    }\r\n\r\n    clear() {\r\n        this.states = [];\r\n    }\r\n\r\n    getLastState() {\r\n        return this.states[this.getLastStateIndex()];\r\n    }\r\n\r\n    getLastStateIndex(): number {\r\n        return this.states.length - 1;\r\n    }\r\n}\r\n","export class CoordsProvider {\r\n    private defaultXCoords: string[] = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n    private reversedXCoords: string[] = ['h', 'g', 'f', 'e', 'd', 'c', 'b', 'a'];\r\n\r\n    private defaultYCoords: number[] = [8, 7, 6, 5, 4, 3, 2, 1];\r\n    private reversedYCoords: number[] = [1, 2, 3, 4, 5, 6, 7, 8];\r\n\r\n    private currentXCoords: string[] = this.defaultXCoords;\r\n    private currentYCoords: number[] = this.defaultYCoords;\r\n\r\n    get xCoords(): string[] {\r\n        return this.currentXCoords;\r\n    }\r\n\r\n    get yCoords(): number[] {\r\n        return this.currentYCoords;\r\n    }\r\n\r\n    reverse() {\r\n        this.currentXCoords = this.reversedXCoords;\r\n        this.currentYCoords = this.reversedYCoords;\r\n    }\r\n\r\n    reset() {\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.currentXCoords = this.defaultXCoords;\r\n        this.currentYCoords = this.defaultYCoords;\r\n    }\r\n}\r\n","import { DrawPoint } from './draw-point';\r\n\r\nexport class Arrow {\r\n    start: DrawPoint;\r\n    end: DrawPoint;\r\n\r\n    isEqual(arrow: Arrow) {\r\n        return arrow && this.start.isEqual(arrow.start) && this.end.isEqual(arrow.end);\r\n    }\r\n}\r\n","import { DrawPoint } from './draw-point';\r\n\r\nexport class Circle {\r\n    drawPoint: DrawPoint;\r\n\r\n    isEqual(circle: Circle) {\r\n        return circle && this.drawPoint.isEqual(circle.drawPoint);\r\n    }\r\n}\r\n","export class DrawPoint {\r\n    x: number;\r\n    y: number;\r\n    color: string;\r\n\r\n    constructor(x: number, y: number, color: string) {\r\n        this.x = x + 0.5;\r\n        this.y = y + 0.5;\r\n        this.color = color;\r\n    }\r\n\r\n    isEqual(that: DrawPoint) {\r\n        return that && that.x === this.x && this.y === that.y;\r\n    }\r\n}\r\n","import { BehaviorSubject } from 'rxjs';\r\nimport { Arrow } from './arrow';\r\nimport { Circle } from './circle';\r\n\r\nexport class DrawProvider {\r\n    private arrowsSubject$ = new BehaviorSubject<Arrow[]>([]);\r\n    private circlesSubject$ = new BehaviorSubject<Circle[]>([]);\r\n\r\n    public arrows$ = this.arrowsSubject$.asObservable();\r\n    public circles$ = this.circlesSubject$.asObservable();\r\n\r\n    private get circles(): Circle[] {\r\n        return this.circlesSubject$.value;\r\n    }\r\n\r\n    private set circles(circles: Circle[]) {\r\n        this.circlesSubject$.next(circles);\r\n    }\r\n\r\n    private get arrows(): Arrow[] {\r\n        return this.arrowsSubject$.value;\r\n    }\r\n\r\n    private set arrows(arrows: Arrow[]) {\r\n        this.arrowsSubject$.next(arrows);\r\n    }\r\n\r\n    addCircle(circle: Circle) {\r\n        this.circles = [...this.circles, circle];\r\n    }\r\n\r\n    reomveCircle(removeCircle: Circle) {\r\n        this.circles = this.circles.filter((circle) => !circle.isEqual(removeCircle));\r\n    }\r\n\r\n    addArrow(arrow: Arrow) {\r\n        this.arrows = [...this.arrows, arrow];\r\n    }\r\n\r\n    removeArrow(removeArrow: Arrow) {\r\n        this.arrows = this.arrows.filter((arrow) => !arrow.isEqual(removeArrow));\r\n    }\r\n\r\n    containsCircle(checkCircle: Circle) {\r\n        return this.circles.some((circle) => circle.isEqual(checkCircle));\r\n    }\r\n\r\n    containsArrow(checkArrow: Arrow) {\r\n        return this.arrows.some((arrow: Arrow) => arrow.isEqual(checkArrow));\r\n    }\r\n\r\n    clear() {\r\n        this.arrows = [];\r\n        this.circles = [];\r\n    }\r\n}\r\n","import { Board } from '../models/board';\r\n\r\nexport class HistoryMove {\r\n    move: string;\r\n    piece: string;\r\n    color: string;\r\n    x: boolean;\r\n\r\n    constructor(move: string, piece: string, color: string, captured: boolean) {\r\n        this.move = move;\r\n        this.piece = piece;\r\n        this.color = color;\r\n        this.x = captured;\r\n    }\r\n}\r\n","import { BehaviorSubject } from 'rxjs';\r\nimport { HistoryMove } from './history-move';\r\n\r\nexport class HistoryMoveProvider {\r\n    historyMovesSubject$ = new BehaviorSubject<HistoryMove[]>([]);\r\n\r\n    get historyMoves(): HistoryMove[] {\r\n        return this.historyMovesSubject$.value;\r\n    }\r\n\r\n    set historyMoves(states: HistoryMove[]) {\r\n        this.historyMovesSubject$.next(states);\r\n    }\r\n\r\n    addMove(historyMove: HistoryMove) {\r\n        this.historyMoves = [...this.historyMoves, historyMove];\r\n    }\r\n\r\n    pop(): HistoryMove {\r\n        const lastHistoryMove = this.getLastMove();\r\n        this.historyMoves = this.historyMoves.filter(\r\n            (state) => state !== lastHistoryMove\r\n        );\r\n        return lastHistoryMove;\r\n    }\r\n\r\n    getAll() {\r\n        return this.historyMoves;\r\n    }\r\n\r\n    clear() {\r\n        this.historyMoves = [];\r\n    }\r\n\r\n    getLastMove() {\r\n        return this.historyMoves[this.getLastMoveIndex()];\r\n    }\r\n\r\n    getLastMoveIndex() {\r\n        return this.historyMoves.length - 1;\r\n    }\r\n}\r\n","import { cloneDeep } from 'lodash';\r\nimport { Bishop } from './pieces/bishop';\r\nimport { Color } from './pieces/color';\r\nimport { King } from './pieces/king';\r\nimport { Knight } from './pieces/knight';\r\nimport { Pawn } from './pieces/pawn';\r\nimport { Piece } from './pieces/piece';\r\nimport { Point } from './pieces/point';\r\nimport { Queen } from './pieces/queen';\r\nimport { Rook } from './pieces/rook';\r\n\r\nexport class Board {\r\n    board: number[][] = [];\r\n    pieces: Piece[] = [];\r\n\r\n    enPassantPoint: Point = null;\r\n    enPassantPiece: Piece = null;\r\n    lastMoveSrc: Point = null;\r\n    lastMoveDest: Point = null;\r\n    activePiece: Piece;\r\n\r\n    blackKingChecked: boolean;\r\n    possibleCaptures: any[] = [];\r\n    possibleMoves: Point[] = [];\r\n    whiteKingChecked: boolean;\r\n\r\n    currentWhitePlayer = true;\r\n    reverted = false;\r\n    fullMoveCount = 1;\r\n    fen: string;\r\n\r\n    constructor() {\r\n        for (let i = 0; i < 8; ++i) {\r\n            this.board[i] = [];\r\n            for (let j = 0; j < 8; ++j) {\r\n                this.board[i][j] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    isXYInPossibleMoves(row: number, col: number): boolean {\r\n        return this.possibleMoves.some((move) => move.row === row && move.col === col);\r\n    }\r\n\r\n    isXYInPossibleCaptures(row: number, col: number): boolean {\r\n        return this.possibleCaptures.some((capture) => capture.row === row && capture.col === col);\r\n    }\r\n\r\n    isXYInSourceMove(i: number, j: number) {\r\n        return this.lastMoveSrc && this.lastMoveSrc.row === i && this.lastMoveSrc.col === j;\r\n    }\r\n\r\n    isXYInDestMove(i: number, j: number) {\r\n        return this.lastMoveDest && this.lastMoveDest.row === i && this.lastMoveDest.col === j;\r\n    }\r\n\r\n    isXYInActiveMove(i: number, j: number) {\r\n        return this.activePiece && this.activePiece.point.row === i && this.activePiece.point.col === j;\r\n    }\r\n\r\n    isPointInPossibleMoves(point: Point): boolean {\r\n        return this.possibleMoves.some((move) => move.row === point.row && move.col === point.col);\r\n    }\r\n\r\n    isPointInPossibleCaptures(point: Point): boolean {\r\n        return this.possibleCaptures.some((capture) => capture.row === point.row && capture.col === point.col);\r\n    }\r\n\r\n    reset() {\r\n        this.lastMoveDest = null;\r\n        this.lastMoveSrc = null;\r\n        this.whiteKingChecked = false;\r\n        this.blackKingChecked = false;\r\n        this.possibleCaptures = [];\r\n        this.possibleMoves = [];\r\n        this.activePiece = null;\r\n        this.reverted = false;\r\n        this.currentWhitePlayer = true;\r\n        this.enPassantPoint = null;\r\n        this.enPassantPiece = null;\r\n        this.fullMoveCount = 1;\r\n        this.calculateFEN();\r\n    }\r\n\r\n    reverse() {\r\n        this.reverted = !this.reverted;\r\n        this.activePiece = null;\r\n        this.possibleMoves = [];\r\n        this.possibleCaptures = [];\r\n\r\n        this.pieces.forEach((piece: Piece) => this.reversePoint(piece.point));\r\n\r\n        this.reversePoint(this.lastMoveSrc);\r\n\r\n        if (this.enPassantPoint && this.enPassantPiece) {\r\n            this.reversePoint(this.enPassantPoint);\r\n        }\r\n    }\r\n\r\n    clone(): Board {\r\n        return cloneDeep(this);\r\n    }\r\n\r\n    isFieldTakenByEnemy(row: number, col: number, enemyColor: Color): boolean {\r\n        if (row > 7 || row < 0 || col > 7 || col < 0) {\r\n            return false;\r\n        }\r\n        return this.pieces.some(\r\n            (piece) => piece.point.col === col && piece.point.row === row && piece.color === enemyColor\r\n        );\r\n    }\r\n\r\n    isFieldEmpty(row: number, col: number): boolean {\r\n        if (row > 7 || row < 0 || col > 7 || col < 0) {\r\n            return false;\r\n        }\r\n        return !this.pieces.some((piece) => piece.point.col === col && piece.point.row === row);\r\n    }\r\n\r\n    isFieldUnderAttack(row: number, col: number, color: Color) {\r\n        return this.pieces\r\n            .filter((piece) => piece.color === color)\r\n            .some((piece) => piece.getCoveredFields().some((field) => field.col === col && field.row === row));\r\n    }\r\n\r\n    getPieceByField(row: number, col: number): Piece {\r\n        if (this.isFieldEmpty(row, col)) {\r\n            //   throw new Error('Piece not found');\r\n            return undefined;\r\n        }\r\n\r\n        return this.pieces.find((piece) => piece.point.col === col && piece.point.row === row);\r\n    }\r\n\r\n    isKingInCheck(color: Color, pieces: Piece[]): boolean {\r\n        const king = pieces.find((piece) => piece.color === color && piece instanceof King);\r\n\r\n        if (king) {\r\n            return pieces.some(\r\n                (piece) =>\r\n                    piece\r\n                        .getPossibleCaptures()\r\n                        .some((point) => point.col === king.point.col && point.row === king.point.row) &&\r\n                    piece.color !== color\r\n            );\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getKingByColor(color: Color): King {\r\n        return this.pieces.find((piece) => piece instanceof King && piece.color === color) as King;\r\n    }\r\n\r\n    getCastleFENString(color: Color) {\r\n        const king = this.getKingByColor(color);\r\n\r\n        if (king.isMovedAlready) {\r\n            return '';\r\n        }\r\n\r\n        let fen = '';\r\n        const leftRook = this.getPieceByField(king.point.row, 0);\r\n        const rightRook = this.getPieceByField(king.point.row, 7);\r\n\r\n        if (rightRook instanceof Rook && rightRook.color === color) {\r\n            if (!rightRook.isMovedAlready) {\r\n                fen += this.reverted ? 'q' : 'k';\r\n            }\r\n        }\r\n\r\n        if (leftRook instanceof Rook && leftRook.color === color) {\r\n            if (!leftRook.isMovedAlready) {\r\n                fen += this.reverted ? 'k' : 'q';\r\n            }\r\n        }\r\n\r\n        fen = fen.split('').sort().join('');\r\n        return color === Color.BLACK ? fen : fen.toUpperCase();\r\n    }\r\n\r\n    getEnPassantFENString() {\r\n        if (this.enPassantPoint) {\r\n            if (this.reverted) {\r\n                return String.fromCharCode(104 - this.enPassantPoint.col) + (this.enPassantPoint.row + 1);\r\n            } else {\r\n                return String.fromCharCode(97 + this.enPassantPoint.col) + (Math.abs(this.enPassantPoint.row - 7) + 1);\r\n            }\r\n        } else {\r\n            return '-';\r\n        }\r\n    }\r\n\r\n    calculateFEN() {\r\n        let fen = '';\r\n        for (let i = 0; i < 8; ++i) {\r\n            let emptyFields = 0;\r\n            for (let j = 0; j < 8; ++j) {\r\n                const foundPiece = this.pieces.find((piece) => piece.point.col === j && piece.point.row === i);\r\n                if (foundPiece) {\r\n                    if (emptyFields > 0) {\r\n                        fen += emptyFields;\r\n                        emptyFields = 0;\r\n                    }\r\n\r\n                    if (foundPiece instanceof Rook) {\r\n                        fen += foundPiece.color === Color.BLACK ? 'r' : 'R';\r\n                    } else {\r\n                        if (foundPiece instanceof Knight) {\r\n                            fen += foundPiece.color === Color.BLACK ? 'n' : 'N';\r\n                        } else {\r\n                            if (foundPiece instanceof Bishop) {\r\n                                fen += foundPiece.color === Color.BLACK ? 'b' : 'B';\r\n                            } else {\r\n                                if (foundPiece instanceof Queen) {\r\n                                    fen += foundPiece.color === Color.BLACK ? 'q' : 'Q';\r\n                                } else {\r\n                                    if (foundPiece instanceof King) {\r\n                                        fen += foundPiece.color === Color.BLACK ? 'k' : 'K';\r\n                                    } else {\r\n                                        if (foundPiece instanceof Pawn) {\r\n                                            fen += foundPiece.color === Color.BLACK ? 'p' : 'P';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    ++emptyFields;\r\n                }\r\n            }\r\n\r\n            if (emptyFields > 0) {\r\n                fen += emptyFields;\r\n            }\r\n\r\n            fen += '/';\r\n        }\r\n\r\n        fen = fen.substr(0, fen.length - 1);\r\n\r\n        if (this.reverted) {\r\n            fen = fen.split('').reverse().join('');\r\n        }\r\n\r\n        fen += ' ' + (this.currentWhitePlayer ? 'w' : 'b');\r\n        const whiteEnPassant = this.getCastleFENString(Color.WHITE);\r\n        const blackEnPassant = this.getCastleFENString(Color.BLACK);\r\n        let concatedEnPassant = whiteEnPassant + blackEnPassant;\r\n        if (!concatedEnPassant) {\r\n            concatedEnPassant = '-';\r\n        }\r\n\r\n        fen += ' ' + concatedEnPassant;\r\n        fen += ' ' + this.getEnPassantFENString();\r\n        fen += ' ' + 0;\r\n        fen += ' ' + this.fullMoveCount;\r\n        this.fen = fen;\r\n    }\r\n\r\n    isXYInPointSelection(i: number, j: number) {\r\n        return false;\r\n    }\r\n\r\n    private reversePoint(point: Point) {\r\n        if (point) {\r\n            point.row = Math.abs(point.row - 7);\r\n            point.col = Math.abs(point.col - 7);\r\n        }\r\n    }\r\n}\r\n","export class MoveTranslation {\r\n    private _xAxis: number;\r\n    private _yAxis: number;\r\n    private _reverted: boolean;\r\n\r\n    constructor(xAxis: number, yAxis: number, reverted: boolean) {\r\n        this._xAxis = xAxis;\r\n        this._yAxis = yAxis;\r\n        this._reverted = reverted;\r\n    }\r\n\r\n    get xAxis(): number {\r\n        return this._xAxis;\r\n    }\r\n\r\n    set xAxis(value: number) {\r\n        this._xAxis = value;\r\n    }\r\n\r\n    get yAxis(): number {\r\n        return this._yAxis;\r\n    }\r\n\r\n    set yAxis(value: number) {\r\n        this._yAxis = value;\r\n    }\r\n\r\n    get reverted(): boolean {\r\n        return this._reverted;\r\n    }\r\n\r\n    set reverted(value: boolean) {\r\n        this._reverted = value;\r\n    }\r\n}\r\n","import { Board } from '../models/board';\r\nimport { Color } from '../models/pieces/color';\r\nimport { Point } from '../models/pieces/point';\r\nimport { MoveTranslation } from '../models/move-translation';\r\n\r\nexport class MoveUtils {\r\n    public static willMoveCauseCheck(\r\n        currentColor: Color,\r\n        row: number,\r\n        col: number,\r\n        destRow: number,\r\n        destCol: number,\r\n        board: Board\r\n    ) {\r\n        const srcPiece = board.getPieceByField(row, col);\r\n        const destPiece = board.getPieceByField(destRow, destCol);\r\n\r\n        if (srcPiece) {\r\n            srcPiece.point.row = destRow;\r\n            srcPiece.point.col = destCol;\r\n        }\r\n\r\n        if (destPiece) {\r\n            board.pieces = board.pieces.filter((piece) => piece !== destPiece);\r\n        }\r\n        const isBound = board.isKingInCheck(currentColor, board.pieces);\r\n\r\n        if (srcPiece) {\r\n            srcPiece.point.col = col;\r\n            srcPiece.point.row = row;\r\n        }\r\n\r\n        if (destPiece) {\r\n            board.pieces.push(destPiece);\r\n        }\r\n\r\n        return isBound;\r\n    }\r\n\r\n    public static format(\r\n        sourcePoint: Point,\r\n        destPoint: Point,\r\n        reverted: boolean\r\n    ) {\r\n        if (reverted) {\r\n            const sourceX = 104 - sourcePoint.col;\r\n            const destX = 104 - destPoint.col;\r\n            return (\r\n                String.fromCharCode(sourceX) +\r\n                (sourcePoint.row + 1) +\r\n                String.fromCharCode(destX) +\r\n                (destPoint.row + 1)\r\n            );\r\n        } else {\r\n            const incrementX = 97;\r\n            return (\r\n                String.fromCharCode(sourcePoint.col + incrementX) +\r\n                (Math.abs(sourcePoint.row - 7) + 1) +\r\n                String.fromCharCode(destPoint.col + incrementX) +\r\n                (Math.abs(destPoint.row - 7) + 1)\r\n            );\r\n        }\r\n    }\r\n\r\n    public static translateCoordsToIndex(coords: string, reverted: boolean) {\r\n        let xAxis: number;\r\n        let yAxis: number;\r\n        if (reverted) {\r\n            xAxis = 104 - coords.charCodeAt(0);\r\n            yAxis = +coords.charAt(1) - 1;\r\n        } else {\r\n            xAxis = coords.charCodeAt(0) - 97;\r\n            yAxis = Math.abs(+coords.charAt(1) - 8);\r\n        }\r\n\r\n        return new MoveTranslation(xAxis, yAxis, reverted);\r\n    }\r\n}\r\n","import { Point } from '../models/pieces/point';\r\nimport { AbstractPiece } from './abstract-piece';\r\n\r\nexport abstract class PieceAbstractDecorator implements AbstractPiece {\r\n\r\n    piece: AbstractPiece;\r\n\r\n    protected constructor(piece: AbstractPiece) {\r\n        this.piece = piece;\r\n    }\r\n\r\n    abstract getPossibleCaptures(): Point[];\r\n\r\n    abstract getPossibleMoves(): Point[];\r\n\r\n}\r\n","import { Board } from '../models/board';\r\nimport { Color } from '../models/pieces/color';\r\nimport { Point } from '../models/pieces/point';\r\nimport { MoveUtils } from '../utils/move-utils';\r\nimport { AbstractPiece } from './abstract-piece';\r\nimport { PieceAbstractDecorator } from './piece-abstract-decorator';\r\n\r\nexport class AvailableMoveDecorator extends PieceAbstractDecorator {\r\n    private pointClicked: Point;\r\n    private color: Color;\r\n    private board: Board;\r\n\r\n    constructor(piece: AbstractPiece, pointClicked: Point, color: Color, board: Board) {\r\n        super(piece);\r\n        this.pointClicked = pointClicked;\r\n        this.color = color;\r\n        this.board = board;\r\n    }\r\n\r\n    getPossibleCaptures(): Point[] {\r\n        return this.piece\r\n            .getPossibleCaptures()\r\n            .filter(\r\n                (point) =>\r\n                    !MoveUtils.willMoveCauseCheck(\r\n                        this.color,\r\n                        this.pointClicked.row,\r\n                        this.pointClicked.col,\r\n                        point.row,\r\n                        point.col,\r\n                        this.board\r\n                    )\r\n            );\r\n    }\r\n\r\n    getPossibleMoves(): Point[] {\r\n        return this.piece\r\n            .getPossibleMoves()\r\n            .filter(\r\n                (point) =>\r\n                    !MoveUtils.willMoveCauseCheck(\r\n                        this.color,\r\n                        this.pointClicked.row,\r\n                        this.pointClicked.col,\r\n                        point.row,\r\n                        point.col,\r\n                        this.board\r\n                    )\r\n            );\r\n    }\r\n}\r\n","import { Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { Color } from '../models/pieces/color';\r\n\r\n@Component({\r\n    selector: 'app-piece-promotion-modal',\r\n    templateUrl: './piece-promotion-modal.component.html',\r\n    styleUrls: ['./piece-promotion-modal.component.scss'],\r\n})\r\nexport class PiecePromotionModalComponent {\r\n    @ViewChild('modal', { static: false }) modal: ElementRef;\r\n\r\n    selectedIndex = 0;\r\n    color: Color;\r\n    Color = Color;\r\n    opened = false;\r\n    private onCloseCallback: (index: number) => void;\r\n\r\n    open(color: Color, closeCallback: (index: number) => void) {\r\n        this.opened = true;\r\n        this.color = color;\r\n        this.onCloseCallback = closeCallback;\r\n        this.modal.nativeElement.style.display = 'block';\r\n    }\r\n\r\n    changeSelection(index: number) {\r\n        this.modal.nativeElement.style.display = 'none';\r\n        this.opened = false;\r\n        this.onCloseCallback(index);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class NgxChessBoardService {\r\n    private componentMethodCallSource = new Subject<any>();\r\n\r\n    componentMethodCalled$ = this.componentMethodCallSource.asObservable();\r\n\r\n    reset() {\r\n        this.componentMethodCallSource.next();\r\n    }\r\n}\r\n","export class Constants {\r\n    static readonly DEFAULT_DARK_TILE_COLOR = 'rgb(97, 84, 61)';\r\n    static readonly DEFAULT_LIGHT_TILE_COLOR = '#BAA378';\r\n\r\n    static readonly DEFAULT_SIZE = 500;\r\n    static readonly MIN_BOARD_SIZE = 100;\r\n    static readonly MAX_BOARD_SIZE = 4000;\r\n\r\n}\r\n","import { Bishop } from '../../models/pieces/bishop';\r\nimport { Color } from '../../models/pieces/color';\r\nimport { King } from '../../models/pieces/king';\r\nimport { Knight } from '../../models/pieces/knight';\r\nimport { Pawn } from '../../models/pieces/pawn';\r\nimport { Piece } from '../../models/pieces/piece';\r\nimport { Queen } from '../../models/pieces/queen';\r\nimport { Rook } from '../../models/pieces/rook';\r\nimport { PieceIconInput } from './piece-icon-input';\r\n\r\nexport class PieceIconInputManager {\r\n\r\n    private _defaultIcons: boolean = false;\r\n    private _pieceIconInput: PieceIconInput;\r\n\r\n    get pieceIconInput(): PieceIconInput {\r\n        return this._pieceIconInput;\r\n    }\r\n\r\n    set pieceIconInput(value: PieceIconInput) {\r\n        this._pieceIconInput = value;\r\n    }\r\n\r\n\r\n    get defaultIcons(): boolean {\r\n        return this._defaultIcons;\r\n    }\r\n\r\n    set defaultIcons(value: boolean) {\r\n        this._defaultIcons = value;\r\n    }\r\n\r\n    isDefaultIcons(): boolean {\r\n        return this.pieceIconInput === undefined || this.pieceIconInput === null;\r\n    }\r\n\r\n    getPieceIcon(piece: Piece): string {\r\n        let isWhite = (piece.color === Color.WHITE);\r\n        switch (piece.constructor) {\r\n            case King:\r\n                return isWhite ? this.pieceIconInput.whiteKingUrl : this.pieceIconInput.blackKingUrl;\r\n            case Queen:\r\n                return isWhite ? this.pieceIconInput.whiteQueenUrl : this.pieceIconInput.blackQueenUrl;\r\n            case Rook:\r\n                return isWhite ? this.pieceIconInput.whiteRookUrl : this.pieceIconInput.blackRookUrl;\r\n            case Bishop:\r\n                return isWhite ? this.pieceIconInput.whiteBishopUrl : this.pieceIconInput.blackBishopUrl;\r\n            case Knight:\r\n                return isWhite ? this.pieceIconInput.whiteKnightUrl : this.pieceIconInput.blackKnightUrl;\r\n            case Pawn:\r\n                return isWhite ? this.pieceIconInput.whitePawnUrl : this.pieceIconInput.blackPawnUrl;\r\n        }\r\n    }\r\n\r\n    loadDefaultData(){\r\n        this.pieceIconInput = {\r\n            blackBishopUrl: '',\r\n            blackKingUrl: '',\r\n            blackKnightUrl: '',\r\n            blackQueenUrl: '',\r\n            blackRookUrl: '',\r\n            whiteBishopUrl: '',\r\n            whiteKingUrl: '',\r\n            whiteKnightUrl: '',\r\n            whitePawnUrl: '',\r\n            whiteQueenUrl: '',\r\n            whiteRookUrl: '',\r\n            blackPawnUrl: 'a'\r\n        }\r\n    }\r\n\r\n}\r\n","import { CdkDragEnd, CdkDragStart } from '@angular/cdk/drag-drop';\r\nimport {\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    HostListener,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    SimpleChanges,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { BoardLoader } from './board-state-provider/board-loader';\r\nimport { BoardState } from './board-state-provider/board-state';\r\nimport { BoardStateProvider } from './board-state-provider/board-state-provider';\r\nimport { MoveStateProvider } from './board-state-provider/move-state-provider';\r\nimport { CoordsProvider } from './coords/coords-provider';\r\nimport { Arrow } from './drawing-tools/arrow';\r\nimport { Circle } from './drawing-tools/circle';\r\nimport { DrawPoint } from './drawing-tools/draw-point';\r\nimport { DrawProvider } from './drawing-tools/draw-provider';\r\nimport { HistoryMove } from './history-move-provider/history-move';\r\nimport { HistoryMoveProvider } from './history-move-provider/history-move-provider';\r\nimport { Board } from './models/board';\r\nimport { Bishop } from './models/pieces/bishop';\r\nimport { Color } from './models/pieces/color';\r\nimport { King } from './models/pieces/king';\r\nimport { Knight } from './models/pieces/knight';\r\nimport { Pawn } from './models/pieces/pawn';\r\nimport { Piece } from './models/pieces/piece';\r\nimport { Point } from './models/pieces/point';\r\nimport { Queen } from './models/pieces/queen';\r\nimport { Rook } from './models/pieces/rook';\r\nimport { NgxChessBoardView } from './ngx-chess-board-view';\r\nimport { AvailableMoveDecorator } from './piece-decorator/available-move-decorator';\r\nimport { PiecePromotionModalComponent } from './piece-promotion-modal/piece-promotion-modal.component';\r\nimport { NgxChessBoardService } from './service/ngx-chess-board.service';\r\nimport { Constants } from './utils/constants';\r\nimport { PieceIconInput } from './utils/inputs/piece-icon-input';\r\nimport { PieceIconInputManager } from './utils/inputs/piece-icon-input-manager';\r\nimport { MoveUtils } from './utils/move-utils';\r\nimport { UnicodeConstants } from './utils/unicode-constants';\r\n\r\nexport interface MoveChange extends HistoryMove {\r\n    check: boolean;\r\n    stalemate: boolean;\r\n    checkmate: boolean;\r\n    fen: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'ngx-chess-board',\r\n    templateUrl: './ngx-chess-board.component.html',\r\n    styleUrls: ['./ngx-chess-board.component.scss'],\r\n})\r\nexport class NgxChessBoardComponent\r\n    implements OnInit, OnChanges, NgxChessBoardView {\r\n    @Input() darkTileColor = Constants.DEFAULT_DARK_TILE_COLOR;\r\n    @Input() lightTileColor: string = Constants.DEFAULT_LIGHT_TILE_COLOR;\r\n    @Input() showCoords = true;\r\n    @Input() dragDisabled = false;\r\n    @Input() drawDisabled = false;\r\n    @Input() lightDisabled = false;\r\n    @Input() darkDisabled = false;\r\n    @Output() moveChange = new EventEmitter<MoveChange>();\r\n    @Output() checkmate = new EventEmitter<void>();\r\n    @Output() stalemate = new EventEmitter<void>();\r\n    pieceSize: number;\r\n    selected = false;\r\n    @ViewChild('boardRef', { static: false })\r\n    boardRef: ElementRef;\r\n    @ViewChild('modal', { static: false }) modal: PiecePromotionModalComponent;\r\n    board: Board;\r\n    boardStateProvider: BoardStateProvider;\r\n    moveStateProvider: MoveStateProvider;\r\n    moveHistoryProvider: HistoryMoveProvider;\r\n    boardLoader: BoardLoader;\r\n    coords: CoordsProvider = new CoordsProvider();\r\n    disabling = false;\r\n    drawProvider: DrawProvider;\r\n    drawPoint: DrawPoint;\r\n    pieceIconManager: PieceIconInputManager;\r\n\r\n    constructor(private ngxChessBoardService: NgxChessBoardService) {\r\n        this.board = new Board();\r\n        this.boardLoader = new BoardLoader(this.board);\r\n        this.boardLoader.addPieces();\r\n        this.boardStateProvider = new BoardStateProvider();\r\n        this.moveHistoryProvider = new HistoryMoveProvider();\r\n        this.drawProvider = new DrawProvider();\r\n        this.pieceIconManager = new PieceIconInputManager();\r\n    }\r\n\r\n    heightAndWidth: number = Constants.DEFAULT_SIZE;\r\n\r\n    @Input('size')\r\n    public set size(size: number) {\r\n        if (\r\n            size &&\r\n            size >= Constants.MIN_BOARD_SIZE &&\r\n            size <= Constants.MAX_BOARD_SIZE\r\n        ) {\r\n            this.heightAndWidth = size;\r\n        } else {\r\n            this.heightAndWidth = Constants.DEFAULT_SIZE;\r\n        }\r\n        this.drawProvider.clear();\r\n        this.calculatePieceSize();\r\n    }\r\n\r\n    @Input('pieceIcons')\r\n    public set pieceIcons(pieceIcons: PieceIconInput) {\r\n        this.pieceIconManager.pieceIconInput = pieceIcons;\r\n    }\r\n\r\n    @HostListener('contextmenu', ['$event'])\r\n    onRightClick(event: MouseEvent) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (\r\n            (changes.lightDisabled &&\r\n                this.lightDisabled &&\r\n                this.board.currentWhitePlayer) ||\r\n            (changes.darkDisabled &&\r\n                this.darkDisabled &&\r\n                !this.board.currentWhitePlayer)\r\n        ) {\r\n            this.board.possibleCaptures = [];\r\n            this.board.possibleMoves = [];\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.ngxChessBoardService.componentMethodCalled$.subscribe(() => {\r\n            this.board.reset();\r\n        });\r\n        this.calculatePieceSize();\r\n    }\r\n\r\n    onMouseUp(event: MouseEvent) {\r\n        if (event.button !== 0 && !this.drawDisabled) {\r\n            this.addDrawPoint(\r\n                event.x,\r\n                event.y,\r\n                event.ctrlKey,\r\n                event.altKey,\r\n                event.shiftKey\r\n            );\r\n            return;\r\n        }\r\n\r\n        this.drawProvider.clear();\r\n\r\n        if (this.dragDisabled) {\r\n            return;\r\n        }\r\n        const pointClicked = this.getClickPoint(event);\r\n\r\n        if (\r\n            this.board.activePiece &&\r\n            pointClicked.isEqual(this.board.activePiece.point) &&\r\n            this.disabling\r\n        ) {\r\n            this.disableSelection();\r\n            this.disabling = false;\r\n            return;\r\n        }\r\n        const pieceClicked = this.getPieceByPoint(\r\n            pointClicked.row,\r\n            pointClicked.col\r\n        );\r\n\r\n        if (this.isPieceDisabled(pieceClicked)) {\r\n            return;\r\n        }\r\n\r\n        if (this.selected) {\r\n            this.handleClickEvent(pointClicked);\r\n            //   this.possibleMoves = activePiece.getPossibleMoves();\r\n        } else {\r\n            if (pieceClicked) {\r\n                if (\r\n                    (this.board.currentWhitePlayer &&\r\n                        pieceClicked.color === Color.BLACK) ||\r\n                    (!this.board.currentWhitePlayer &&\r\n                        pieceClicked.color === Color.WHITE)\r\n                ) {\r\n                    return;\r\n                }\r\n\r\n                this.prepareActivePiece(pieceClicked, pointClicked);\r\n            }\r\n        }\r\n    }\r\n\r\n    afterMoveActions(promotionIndex?: number) {\r\n        this.checkIfPawnFirstMove(this.board.activePiece);\r\n        this.checkIfRookMoved(this.board.activePiece);\r\n        this.checkIfKingMoved(this.board.activePiece);\r\n\r\n        this.board.blackKingChecked = this.board.isKingInCheck(\r\n            Color.BLACK,\r\n            this.board.pieces\r\n        );\r\n        this.board.whiteKingChecked = this.board.isKingInCheck(\r\n            Color.WHITE,\r\n            this.board.pieces\r\n        );\r\n        const check =\r\n            this.board.blackKingChecked || this.board.whiteKingChecked;\r\n        const checkmate =\r\n            this.checkForPossibleMoves(Color.BLACK) ||\r\n            this.checkForPossibleMoves(Color.WHITE);\r\n        const stalemate =\r\n            this.checkForPat(Color.BLACK) || this.checkForPat(Color.WHITE);\r\n\r\n        this.disabling = false;\r\n        this.board.calculateFEN();\r\n\r\n        const lastMove = this.moveHistoryProvider.getLastMove();\r\n        if (lastMove && promotionIndex) {\r\n            lastMove.move += promotionIndex;\r\n        }\r\n\r\n        this.moveChange.emit({\r\n            ...lastMove,\r\n            check,\r\n            checkmate,\r\n            stalemate,\r\n            fen: this.board.fen,\r\n        });\r\n    }\r\n\r\n    disableSelection() {\r\n        this.selected = false;\r\n        this.board.possibleCaptures = [];\r\n        this.board.activePiece = null;\r\n        this.board.possibleMoves = [];\r\n    }\r\n\r\n    prepareActivePiece(pieceClicked: Piece, pointClicked: Point) {\r\n        this.board.activePiece = pieceClicked;\r\n        this.selected = true;\r\n        this.board.possibleCaptures = new AvailableMoveDecorator(\r\n            pieceClicked,\r\n            pointClicked,\r\n            this.board.currentWhitePlayer ? Color.WHITE : Color.BLACK,\r\n            this.board\r\n        ).getPossibleCaptures();\r\n        this.board.possibleMoves = new AvailableMoveDecorator(\r\n            pieceClicked,\r\n            pointClicked,\r\n            this.board.currentWhitePlayer ? Color.WHITE : Color.BLACK,\r\n            this.board\r\n        ).getPossibleMoves();\r\n    }\r\n\r\n    getPieceByPoint(row: number, col: number): Piece {\r\n        row = Math.floor(row);\r\n        col = Math.floor(col);\r\n        return this.board.pieces.find(\r\n            (piece) => piece.point.col === col && piece.point.row === row\r\n        );\r\n    }\r\n\r\n    isKingChecked(piece: Piece) {\r\n        if (piece instanceof King) {\r\n            return piece.color === Color.WHITE\r\n                ? this.board.whiteKingChecked\r\n                : this.board.blackKingChecked;\r\n        }\r\n    }\r\n\r\n    getClickPoint(event) {\r\n        return new Point(\r\n            Math.floor(\r\n                (event.y -\r\n                    this.boardRef.nativeElement.getBoundingClientRect().top) /\r\n                    (this.boardRef.nativeElement.getBoundingClientRect()\r\n                        .height /\r\n                        8)\r\n            ),\r\n            Math.floor(\r\n                (event.x -\r\n                    this.boardRef.nativeElement.getBoundingClientRect().left) /\r\n                    (this.boardRef.nativeElement.getBoundingClientRect().width /\r\n                        8)\r\n            )\r\n        );\r\n    }\r\n\r\n    movePiece(toMovePiece: Piece, newPoint: Point, promotionIndex?: number) {\r\n        const destPiece = this.board.pieces.find(\r\n            (piece) =>\r\n                piece.point.col === newPoint.col &&\r\n                piece.point.row === newPoint.row\r\n        );\r\n\r\n        if (destPiece && toMovePiece.color !== destPiece.color) {\r\n            this.board.pieces = this.board.pieces.filter(\r\n                (piece) => piece !== destPiece\r\n            );\r\n        } else {\r\n            if (destPiece && toMovePiece.color === destPiece.color) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        const move = new HistoryMove(\r\n            MoveUtils.format(toMovePiece.point, newPoint, this.board.reverted),\r\n            toMovePiece.constant.name,\r\n            toMovePiece.color === Color.WHITE ? 'white' : 'black',\r\n            !!destPiece\r\n        );\r\n        this.moveHistoryProvider.addMove(move);\r\n\r\n        if (toMovePiece instanceof King) {\r\n            const squaresMoved = Math.abs(newPoint.col - toMovePiece.point.col);\r\n            if (squaresMoved > 1) {\r\n                if (newPoint.col < 3) {\r\n                    const leftRook = this.board.getPieceByField(\r\n                        toMovePiece.point.row,\r\n                        0\r\n                    );\r\n                    leftRook.point.col = this.board.reverted ? 2 : 3;\r\n                } else {\r\n                    const rightRook = this.board.getPieceByField(\r\n                        toMovePiece.point.row,\r\n                        7\r\n                    );\r\n                    rightRook.point.col = this.board.reverted ? 4 : 5;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (toMovePiece instanceof Pawn) {\r\n            this.checkIfPawnTakesEnPassant(newPoint);\r\n            this.checkIfPawnEnpassanted(toMovePiece, newPoint);\r\n        }\r\n\r\n        toMovePiece.point = newPoint;\r\n        this.increaseFullMoveCount();\r\n        this.board.currentWhitePlayer = !this.board.currentWhitePlayer;\r\n\r\n        if (!this.checkForPawnPromote(toMovePiece, promotionIndex)) {\r\n            this.afterMoveActions();\r\n        }\r\n    }\r\n\r\n    checkIfPawnFirstMove(piece: Piece) {\r\n        if (piece instanceof Pawn) {\r\n            piece.isMovedAlready = true;\r\n        }\r\n    }\r\n\r\n    checkForPawnPromote(toPromotePiece: Piece, promotionIndex?: number) {\r\n        if (!(toPromotePiece instanceof Pawn)) {\r\n            return;\r\n        }\r\n\r\n        if (toPromotePiece.point.row === 0 || toPromotePiece.point.row === 7) {\r\n            this.board.pieces = this.board.pieces.filter(\r\n                (piece) => piece !== toPromotePiece\r\n            );\r\n\r\n            // When we make move manually, we pass promotion index already, so we don't need\r\n            // to acquire it from promote dialog\r\n            if (!promotionIndex) {\r\n                this.openPromoteDialog(toPromotePiece);\r\n            } else {\r\n                this.resolvePromotionChoice(toPromotePiece, promotionIndex);\r\n                this.afterMoveActions(promotionIndex);\r\n            }\r\n\r\n            return true;\r\n        }\r\n    }\r\n\r\n    openPromoteDialog(piece: Piece) {\r\n        this.modal.open(piece.color, (index) => {\r\n            this.resolvePromotionChoice(piece, index);\r\n            this.afterMoveActions(index);\r\n        });\r\n    }\r\n\r\n    resolvePromotionChoice(piece: Piece, index: number) {\r\n        const isWhite = piece.color === Color.WHITE;\r\n        switch (index) {\r\n            case 1:\r\n                this.board.pieces.push(\r\n                    new Queen(\r\n                        piece.point,\r\n                        piece.color,\r\n                        isWhite\r\n                            ? UnicodeConstants.WHITE_QUEEN\r\n                            : UnicodeConstants.BLACK_QUEEN,\r\n                        this.board\r\n                    )\r\n                );\r\n                break;\r\n            case 2:\r\n                this.board.pieces.push(\r\n                    new Rook(\r\n                        piece.point,\r\n                        piece.color,\r\n                        isWhite\r\n                            ? UnicodeConstants.WHITE_ROOK\r\n                            : UnicodeConstants.BLACK_ROOK,\r\n                        this.board\r\n                    )\r\n                );\r\n                break;\r\n            case 3:\r\n                this.board.pieces.push(\r\n                    new Bishop(\r\n                        piece.point,\r\n                        piece.color,\r\n                        isWhite\r\n                            ? UnicodeConstants.WHITE_BISHOP\r\n                            : UnicodeConstants.BLACK_BISHOP,\r\n                        this.board\r\n                    )\r\n                );\r\n                break;\r\n            case 4:\r\n                this.board.pieces.push(\r\n                    new Knight(\r\n                        piece.point,\r\n                        piece.color,\r\n                        isWhite\r\n                            ? UnicodeConstants.WHITE_KNIGHT\r\n                            : UnicodeConstants.BLACK_KNIGHT,\r\n                        this.board\r\n                    )\r\n                );\r\n                break;\r\n        }\r\n    }\r\n\r\n    reset(): void {\r\n        this.boardStateProvider.clear();\r\n        this.moveHistoryProvider.clear();\r\n        this.boardLoader.addPieces();\r\n        this.board.reset();\r\n        this.coords.reset();\r\n        this.drawProvider.clear();\r\n    }\r\n\r\n    reverse(): void {\r\n        this.selected = false;\r\n        this.board.reverse();\r\n        this.coords.reverse();\r\n    }\r\n\r\n    updateBoard(board: Board) {\r\n        this.board = board;\r\n        this.boardLoader.setBoard(this.board);\r\n        this.board.possibleCaptures = [];\r\n        this.board.possibleMoves = [];\r\n    }\r\n    undo(): void {\r\n        if (!this.boardStateProvider.isEmpty()) {\r\n            const lastBoard = this.boardStateProvider.pop().board;\r\n            if (this.board.reverted) {\r\n                lastBoard.reverse();\r\n            }\r\n            this.board = lastBoard;\r\n            this.boardLoader.setBoard(this.board);\r\n            this.board.possibleCaptures = [];\r\n            this.board.possibleMoves = [];\r\n            this.moveHistoryProvider.pop();\r\n        }\r\n    }\r\n\r\n    getMoveHistory(): HistoryMove[] {\r\n        return this.moveHistoryProvider.getAll();\r\n    }\r\n\r\n    setFEN(fen: string): void {\r\n        try {\r\n            this.boardLoader.loadFEN(fen);\r\n            this.board.possibleCaptures = [];\r\n            this.board.possibleMoves = [];\r\n        } catch (exception) {\r\n            this.boardLoader.addPieces();\r\n        }\r\n    }\r\n\r\n    getFEN(): string {\r\n        return this.board.fen;\r\n    }\r\n\r\n    dragEnded(event: CdkDragEnd): void {\r\n        event.source.reset();\r\n        event.source.element.nativeElement.style.zIndex = '0';\r\n        event.source.element.nativeElement.style.pointerEvents = 'auto';\r\n        event.source.element.nativeElement.style.touchAction = 'auto';\r\n    }\r\n\r\n    dragStart(event: CdkDragStart): void {\r\n        const style = event.source.element.nativeElement.style;\r\n        style.position = 'relative';\r\n        style.zIndex = '1000';\r\n        style.touchAction = 'none';\r\n        style.pointerEvents = 'none';\r\n    }\r\n\r\n    onMouseDown(event: MouseEvent) {\r\n        if (event.button !== 0) {\r\n            this.drawPoint = this.getDrawingPoint(\r\n                event.x,\r\n                event.y,\r\n                event.ctrlKey,\r\n                event.altKey,\r\n                event.shiftKey\r\n            );\r\n            return;\r\n        }\r\n        const pointClicked = this.getClickPoint(event);\r\n\r\n        this.drawProvider.clear();\r\n\r\n        if (\r\n            this.board.activePiece &&\r\n            pointClicked.isEqual(this.board.activePiece.point)\r\n        ) {\r\n            this.disabling = true;\r\n            return;\r\n        }\r\n\r\n        const pieceClicked = this.getPieceByPoint(\r\n            pointClicked.row,\r\n            pointClicked.col\r\n        );\r\n\r\n        if (this.isPieceDisabled(pieceClicked)) {\r\n            return;\r\n        }\r\n\r\n        if (this.selected) {\r\n            this.handleClickEvent(pointClicked);\r\n        } else {\r\n            if (pieceClicked) {\r\n                if (\r\n                    (this.board.currentWhitePlayer &&\r\n                        pieceClicked.color === Color.BLACK) ||\r\n                    (!this.board.currentWhitePlayer &&\r\n                        pieceClicked.color === Color.WHITE)\r\n                ) {\r\n                    return;\r\n                }\r\n\r\n                this.prepareActivePiece(pieceClicked, pointClicked);\r\n            }\r\n        }\r\n    }\r\n\r\n    getDrawingPoint(\r\n        x: number,\r\n        y: number,\r\n        crtl: boolean,\r\n        alt: boolean,\r\n        shift: boolean\r\n    ) {\r\n        const squareSize = this.heightAndWidth / 8;\r\n        const xx = Math.floor(\r\n            (x - this.boardRef.nativeElement.getBoundingClientRect().left) /\r\n                squareSize\r\n        );\r\n        const yy = Math.floor(\r\n            (y - this.boardRef.nativeElement.getBoundingClientRect().top) /\r\n                squareSize\r\n        );\r\n\r\n        let color = 'green';\r\n\r\n        if (crtl || shift) {\r\n            color = 'red';\r\n        }\r\n        if (alt) {\r\n            color = 'blue';\r\n        }\r\n        if ((shift || crtl) && alt) {\r\n            color = 'orange';\r\n        }\r\n        return new DrawPoint(\r\n            Math.floor(xx * squareSize + squareSize / 2),\r\n            Math.floor(yy * squareSize + squareSize / 2),\r\n            color\r\n        );\r\n    }\r\n\r\n    private checkIfRookMoved(piece: Piece) {\r\n        if (piece instanceof Rook) {\r\n            piece.isMovedAlready = true;\r\n        }\r\n    }\r\n\r\n    private checkIfKingMoved(piece: Piece) {\r\n        if (piece instanceof King) {\r\n            piece.isMovedAlready = true;\r\n        }\r\n    }\r\n\r\n    private checkForPossibleMoves(color: Color): boolean {\r\n        if (\r\n            !this.board.pieces\r\n                .filter((piece) => piece.color === color)\r\n                .some(\r\n                    (piece) =>\r\n                        piece\r\n                            .getPossibleMoves()\r\n                            .some(\r\n                                (move) =>\r\n                                    !MoveUtils.willMoveCauseCheck(\r\n                                        color,\r\n                                        piece.point.row,\r\n                                        piece.point.col,\r\n                                        move.row,\r\n                                        move.col,\r\n                                        this.board\r\n                                    )\r\n                            ) ||\r\n                        piece\r\n                            .getPossibleCaptures()\r\n                            .some(\r\n                                (capture) =>\r\n                                    !MoveUtils.willMoveCauseCheck(\r\n                                        color,\r\n                                        piece.point.row,\r\n                                        piece.point.col,\r\n                                        capture.row,\r\n                                        capture.col,\r\n                                        this.board\r\n                                    )\r\n                            )\r\n                )\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private checkForPat(color: Color) {\r\n        if (color === Color.WHITE && !this.board.whiteKingChecked) {\r\n            return this.checkForPossibleMoves(color);\r\n        } else {\r\n            if (color === Color.BLACK && !this.board.blackKingChecked) {\r\n                return this.checkForPossibleMoves(color);\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkIfPawnEnpassanted(piece: Pawn, newPoint: Point) {\r\n        if (Math.abs(piece.point.row - newPoint.row) > 1) {\r\n            this.board.enPassantPiece = piece;\r\n            this.board.enPassantPoint = new Point(\r\n                (piece.point.row + newPoint.row) / 2,\r\n                piece.point.col\r\n            );\r\n        } else {\r\n            this.board.enPassantPoint = null;\r\n            this.board.enPassantPiece = null;\r\n        }\r\n    }\r\n\r\n    private checkIfPawnTakesEnPassant(newPoint: Point) {\r\n        if (newPoint.isEqual(this.board.enPassantPoint)) {\r\n            this.board.pieces = this.board.pieces.filter(\r\n                (piece) => piece !== this.board.enPassantPiece\r\n            );\r\n            this.board.enPassantPoint = null;\r\n            this.board.enPassantPiece = null;\r\n        }\r\n    }\r\n\r\n    private saveClone() {\r\n        const clone = this.board.clone();\r\n\r\n        if (this.board.reverted) {\r\n            clone.reverse();\r\n        }\r\n        this.boardStateProvider.addMove(new BoardState(clone));\r\n    }\r\n\r\n    private saveMoveClone() {\r\n        const clone = this.board.clone();\r\n\r\n        if (this.board.reverted) {\r\n            clone.reverse();\r\n        }\r\n        this.moveStateProvider.addMove(new BoardState(clone));\r\n    }\r\n\r\n    private calculatePieceSize() {\r\n        this.pieceSize = this.heightAndWidth / 10;\r\n    }\r\n\r\n    private increaseFullMoveCount() {\r\n        if (!this.board.currentWhitePlayer) {\r\n            ++this.board.fullMoveCount;\r\n        }\r\n    }\r\n\r\n    private handleClickEvent(pointClicked: Point) {\r\n        if (\r\n            this.board.isPointInPossibleMoves(pointClicked) ||\r\n            this.board.isPointInPossibleCaptures(pointClicked)\r\n        ) {\r\n            this.saveClone();\r\n            this.board.lastMoveSrc = new Point(\r\n                this.board.activePiece.point.row,\r\n                this.board.activePiece.point.col\r\n            );\r\n            this.board.lastMoveDest = pointClicked;\r\n            this.movePiece(this.board.activePiece, pointClicked);\r\n        }\r\n\r\n        this.disableSelection();\r\n        const pieceClicked = this.getPieceByPoint(\r\n            pointClicked.row,\r\n            pointClicked.col\r\n        );\r\n        if (pieceClicked) {\r\n            if (\r\n                (this.board.currentWhitePlayer &&\r\n                    pieceClicked.color === Color.BLACK) ||\r\n                (!this.board.currentWhitePlayer &&\r\n                    pieceClicked.color === Color.WHITE)\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            this.prepareActivePiece(pieceClicked, pointClicked);\r\n        }\r\n    }\r\n\r\n    private addDrawPoint(\r\n        x: number,\r\n        y: number,\r\n        crtl: boolean,\r\n        alt: boolean,\r\n        shift: boolean\r\n    ) {\r\n        const upPoint = this.getDrawingPoint(x, y, crtl, alt, shift);\r\n        if (this.drawPoint.isEqual(upPoint)) {\r\n            const circle = new Circle();\r\n            circle.drawPoint = upPoint;\r\n            if (!this.drawProvider.containsCircle(circle)) {\r\n                this.drawProvider.addCircle(circle);\r\n            } else {\r\n                this.drawProvider.reomveCircle(circle);\r\n            }\r\n        } else {\r\n            const arrow = new Arrow();\r\n            arrow.start = this.drawPoint;\r\n            arrow.end = upPoint;\r\n\r\n            if (!this.drawProvider.containsArrow(arrow)) {\r\n                this.drawProvider.addArrow(arrow);\r\n            } else {\r\n                this.drawProvider.removeArrow(arrow);\r\n            }\r\n        }\r\n    }\r\n\r\n    move(coords: string) {\r\n        if (coords) {\r\n            const sourceIndexes = MoveUtils.translateCoordsToIndex(\r\n                coords.substring(0, 2),\r\n                this.board.reverted\r\n            );\r\n\r\n            const destIndexes = MoveUtils.translateCoordsToIndex(\r\n                coords.substring(2, 4),\r\n                this.board.reverted\r\n            );\r\n\r\n            const srcPiece = this.getPieceByPoint(\r\n                sourceIndexes.yAxis,\r\n                sourceIndexes.xAxis\r\n            );\r\n\r\n            if (srcPiece) {\r\n                if (\r\n                    (this.board.currentWhitePlayer &&\r\n                        srcPiece.color === Color.BLACK) ||\r\n                    (!this.board.currentWhitePlayer &&\r\n                        srcPiece.color === Color.WHITE)\r\n                ) {\r\n                    return;\r\n                }\r\n\r\n                this.prepareActivePiece(srcPiece, srcPiece.point);\r\n\r\n                if (\r\n                    this.board.isPointInPossibleMoves(\r\n                        new Point(destIndexes.yAxis, destIndexes.xAxis)\r\n                    ) ||\r\n                    this.board.isPointInPossibleCaptures(\r\n                        new Point(destIndexes.yAxis, destIndexes.xAxis)\r\n                    )\r\n                ) {\r\n                    this.saveClone();\r\n                    this.movePiece(\r\n                        srcPiece,\r\n                        new Point(destIndexes.yAxis, destIndexes.xAxis),\r\n                        coords.length === 5 ? +coords.substring(4, 5) : 0\r\n                    );\r\n\r\n                    this.board.lastMoveSrc = new Point(\r\n                        sourceIndexes.yAxis,\r\n                        sourceIndexes.xAxis\r\n                    );\r\n                    this.board.lastMoveDest = new Point(\r\n                        destIndexes.yAxis,\r\n                        destIndexes.xAxis\r\n                    );\r\n\r\n                    this.disableSelection();\r\n                } else {\r\n                    this.disableSelection();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getCustomPieceIcons(piece: Piece) {\r\n        return JSON.parse(\r\n            `{ \"background-image\": \"url('${this.pieceIconManager.getPieceIcon(\r\n                piece\r\n            )}')\"}`\r\n        );\r\n    }\r\n\r\n    private isPieceDisabled(pieceClicked: Piece) {\r\n        if (pieceClicked && pieceClicked.point) {\r\n            const foundCapture = this.board.possibleCaptures.find(\r\n                (capture) =>\r\n                    capture.col === pieceClicked.point.col &&\r\n                    capture.row === pieceClicked.point.row\r\n            );\r\n\r\n            if (foundCapture) {\r\n                return false;\r\n            }\r\n        }\r\n        return (\r\n            pieceClicked &&\r\n            ((this.lightDisabled && pieceClicked.color === Color.WHITE) ||\r\n                (this.darkDisabled && pieceClicked.color === Color.BLACK))\r\n        );\r\n    }\r\n}\r\n","import { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NgxChessBoardComponent } from './ngx-chess-board.component';\r\nimport { PiecePromotionModalComponent } from './piece-promotion-modal/piece-promotion-modal.component';\r\nimport { NgxChessBoardService } from './service/ngx-chess-board.service';\r\n\r\n@NgModule({\r\n    declarations: [NgxChessBoardComponent, PiecePromotionModalComponent],\r\n    imports: [CommonModule, DragDropModule],\r\n    exports: [NgxChessBoardComponent],\r\n})\r\nexport class NgxChessBoardModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: NgxChessBoardModule,\r\n            providers: [NgxChessBoardService],\r\n        };\r\n    }\r\n}\r\n","export interface PieceIconInput{\r\n\r\n    whiteKingUrl: string;\r\n    whiteQueenUrl: string;\r\n    whiteKnightUrl: string;\r\n    whiteRookUrl: string;\r\n    whitePawnUrl: string;\r\n    whiteBishopUrl: string;\r\n    \r\n    blackKingUrl: string;\r\n    blackQueenUrl: string;\r\n    blackKnightUrl: string;\r\n    blackRookUrl: string;\r\n    blackPawnUrl: string;\r\n    blackBishopUrl: string;\r\n\r\n}","import { HistoryMove } from './history-move-provider/history-move';\r\n\r\nexport interface NgxChessBoardView {\r\n    reset(): void;\r\n\r\n    reverse(): void;\r\n\r\n    undo(): void;\r\n\r\n    getMoveHistory(): HistoryMove[];\r\n\r\n    setFEN(fen: string): void;\r\n\r\n    move(coords: string): void;\r\n\r\n    getFEN(): string;\r\n}\r\n"],"names":["tslib_1.__extends","BehaviorSubject","cloneDeep","Component","ViewChild","Subject","Injectable","EventEmitter","Input","Output","HostListener","NgModule","CommonModule","DragDropModule"],"mappings":"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"}